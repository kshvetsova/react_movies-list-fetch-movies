{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","imgUrl","description","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","setMovies","useState","value","setValue","setMovie","error","setError","handleFindMovie","fetch","then","response","json","request","res","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","onChange","e","target","onClick","movieUsers","moviesUsers","find","movieItem","disabled","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a0a148b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { PropTypes } from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  imgUrl,\n  description,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { PropTypes } from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api';\n\nexport const FindMovie = ({ movies, setMovies }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(false);\n  const handleFindMovie = title => (\n    request(title).then((res) => {\n      if (res.Response === 'True') {\n        setError(false);\n        setMovie({\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster,\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n          imdbId: res.imdbID,\n        });\n      } else {\n        setError('Can\\'t find a movie with such a title!');\n      }\n    }));\n  const handleAddMovie = (moviesUsers, movieUsers) => {\n    if (moviesUsers.find(movieItem => movieItem.imdbId === movieUsers.imdbId)) {\n      setError(`\"${movieUsers.title}\" has already been added!`);\n    } else {\n      setMovies([...moviesUsers, movieUsers]);\n      setMovie('');\n      setValue('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'input is-danger': error })}\n              value={value}\n              onChange={(e) => {\n                setValue(e.target.value);\n                setError(false);\n                setMovie('');\n              }}\n            />\n          </div>\n          {error && (<p className=\"help is-danger\">{error}</p>)}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames('button', { 'button is-light': error })}\n              onClick={() => handleFindMovie(value)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => handleAddMovie(movies, movie)}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setMovies: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=22c8ca35&t=';\n\nexport const request = title => (\n  fetch(`${BASE_URL}${title}`).then(response => response.json())\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}